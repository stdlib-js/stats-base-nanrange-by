// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var r="function"==typeof Object.defineProperty?Object.defineProperty:null;var e=function(){try{return r({},"x",{}),!0}catch(r){return!1}},t=Object.defineProperty,a=Object.prototype,o=a.toString,n=a.__defineGetter__,l=a.__defineSetter__,i=a.__lookupGetter__,u=a.__lookupSetter__;var c=t,f=function(r,e,t){var c,f,_,v;if("object"!=typeof r||null===r||"[object Array]"===o.call(r))throw new TypeError("invalid argument. First argument must be an object. Value: `"+r+"`.");if("object"!=typeof t||null===t||"[object Array]"===o.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((f="value"in t)&&(i.call(r,e)||u.call(r,e)?(c=r.__proto__,r.__proto__=a,delete r[e],r[e]=t.value,r.__proto__=c):r[e]=t.value),_="get"in t,v="set"in t,f&&(_||v))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return _&&n&&n.call(r,e,t.get),v&&l&&l.call(r,e,t.set),r},_=e()?c:f;var v=function(r){return r!=r},p=v;var d=v;var b=function(r,e,t,a,o){var n,l,i,u,c;if(r<=0)return NaN;if(1===r||0===t)return void 0===(u=a.call(o,e[0],0,0,e))||p(u)?NaN:0;for(i=t<0?(1-r)*t:0,c=0;c<r&&((l=a.call(o,e[i],c,i,e))!=l||void 0===l);c++)i+=t;if(c===r)return NaN;for(n=l,c+=1;c<r;c++)i+=t,void 0===(u=a.call(o,e[i],c,i,e))||p(u)||(u<l?l=u:u>n&&(n=u));return n-l};(function(r,e,t){_(r,e,{configurable:!1,enumerable:!1,writable:!1,value:t})})(b,"ndarray",(function(r,e,t,a,o,n){var l,i,u,c,f;if(r<=0)return NaN;if(1===r||0===t)return void 0===(c=o.call(n,e[0],0,0,e))||d(c)?NaN:0;for(u=a,f=0;f<r&&((i=o.call(n,e[u],f,u,e))!=i||void 0===i);f++)u+=t;if(f===r)return NaN;for(l=i,f+=1;f<r;f++)u+=t,void 0===(c=o.call(n,e[u],f,u,e))||d(c)||(c<i?i=c:c>l&&(l=c));return l-i}));var y=b;export{y as default};
//# sourceMappingURL=mod.js.map
